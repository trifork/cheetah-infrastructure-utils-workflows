{
  //Settings that can apply to every repository
  "extends": [
    ":dependencyDashboard",
    ":semanticPrefixFixDepsChoreOthers",
    "group:monorepos",
    "group:recommended",
    "replacements:all",
    "workarounds:all",
    "docker:enableMajor",
    ":semanticCommits"
  ],
  // Extensions of file matches of type yaml
  // This makes renovate scan the same yaml file multiple times but since theres no naming convensions this is necessary
  "docker-compose": {
    "fileMatch": ["(.+)\\.y(a?)ml"]
  },
  "github-actions": {
    "fileMatch": ["(.+)\\.y(a?)ml"]
  },
  "kubernetes": {
    "fileMatch": ["(.+)\\.y(a?)ml"]
  },
  "flux": {
    "fileMatch": ["(.+)\\.y(a?)ml"]
  },
  // These labels lie outside of "packageRules" and will be appended to all PR's, no matter the type.
  // If Renovate has already made a pull request, it will not update the labels on said pr, even if changes are made. These labels will only be appended on future pr's.
  "labels": [
    "dependencies",
    "automated-pr"
  ],
  "configMigration": true,
  //Schedule for renovate
  "timezone": "Europe/Copenhagen",
  "minimumReleaseAge": "3 days",
  "digest": {
    "enabled": false
  },
  "automergeSchedule": [
    "after 12pm and before 4pm every weekday"
  ],
  "vulnerabilityAlerts": {
    "addLabels": [
      "vulnerability"
    ],
    "additionalBranchPrefix": [
      ""
    ]
  },
  "rebaseWhen": "auto",
  "automerge": false,
  "ignorePaths": [
    "**/node_modules/**",
    "**/bower_components/**",
    "**/vendor/**",
    "**/examples/**",
    "**/__tests__/**",
    "**/__fixtures__/**"
  ],
  // displays specific version number
  "commitMessageExtra": "to {{newVersion}}",
  // removes default suffix, since it isn't specific about the version number
  "commitMessageSuffix": "",
  "commitMessageAction": "{{updateType}} update",
  "packageRules": [
    {
      //-----------------------------------------------------------------------------------------//
      //Settings for all patch updates. These are grouped by datasource. e.g. maven/.net/python.
      //-----------------------------------------------------------------------------------------//
      "groupName": "patch",
      "matchPackagePatterns": [
        "*"
      ],
      "matchUpdateTypes": [
        "patch"
      ],
      "addLabels": [
        "patch-updates",
        "e2e-test"
      ],
      "additionalBranchPrefix": [
        "all-{{datasource}}-"
      ],
      "recreateWhen": "always",
      "group": {
        "commitMessageTopic": "{{datasource}} group"
      },
      "automerge": true
    },
    {
      //-----------------------------------------------------------------------------------------//
      //Settings for major updates
      //-----------------------------------------------------------------------------------------//
      //Match every dependency
      "matchPackagePatterns": [
        "*"
      ],
      //Specify which kind of update
      "matchUpdateTypes": [
        "major"
      ],
      //Branch prefix on renovates created branches it uses to merge with
      "additionalBranchPrefix": [
        "major-"
      ],
      // Labels specific for major pull requests
      "addLabels": [
        "major-update",
        "e2e-test"
      ]
    },
    {
      //-----------------------------------------------------------------------------------------//
      //Settings minor updates
      //-----------------------------------------------------------------------------------------//
      "groupName": "minor",
      "matchPackagePatterns": [
        "*"
      ],
      "matchUpdateTypes": [
        "minor"
      ],
      "addLabels": [
        "minor-updates",
        "e2e-test"
      ],
      "additionalBranchPrefix": [
        "all-{{datasource}}-"
      ],
      "group": {
        "commitMessageTopic": "{{datasource}} group"
      },
      "recreateWhen": "always"
    },
    /*
    {
      //-----------------------------------------------------------------------------------------//
      //Settings for digest updates. This is a special case, where we want to update the sha of a dependency, but not the version, however this might not be ideal with all dependencies.
      // For now automerge has been enabled, but this might be changed in the future.
      // NOTE:
      // Renovate is unable to detect the sha of a digest update in the prTitle. It can only detect major/minor/patch e.g. 1.0.0 -> 2.1.1 - This means that automerging might have some issues and therefore "recreateWhen" has been set to "always" to see if this fixes the issue.
      // https://docs.renovatebot.com/docker/#digest-pinning slight overview of why we might want to enable digest updates + automerge in the future.
      //-----------------------------------------------------------------------------------------//
      "matchPackagePatterns": [
        "*"
      ],
      "matchUpdateTypes": [
        "digest"
      ],
      "addLabels": [
        "digest-update"
      ],
      "recreateWhen": "always",
      "automerge": true
    },
    */
    {
      //-----------------------------------------------------------------------------------------//
      //Settings GitRepository and Kustomization
      //-----------------------------------------------------------------------------------------//
      "matchPackageNames": [
        "GitRepository",
        "Kustomization"
      ],
      "automerge": false,
      "addLabels": [
        "{{depName}}"
      ],
      "additionalBranchPrefix": [
        "{{depName}}-"
      ]
    },
    {
      //-----------------------------------------------------------------------------------------//
      //Settings for Flink.
      //These settings allows Renovate to create PR's for flink updates. 
      //These should always be handled manually.
      //-----------------------------------------------------------------------------------------//
      "matchPackagePatterns": [
        "flink"
      ],
      "groupName": "flink",
      "automerge": false,
      "labels": [
        "dependencies",
        "automated-pr"
      ],
      "additionalBranchPrefix": [
        "flink-"
      ],
      "group": {
        "commitMessageTopic": "{{{groupName}}} group"
      },
      "recreateWhen": "always"
    },
    {
      //-----------------------------------------------------------------------------------------//
      //Settings for connectors
      //These should be handled manually.
      //-----------------------------------------------------------------------------------------//
      "matchDepPatterns": [
        "connector"
      ],
      "automerge": false,
      "labels": [
        "dependencies",
        "automated-pr"
      ],
      "additionalBranchPrefix": [
        "{{depName}}-"
      ]
    },
    {
      //-----------------------------------------------------------------------------------------//
      //Settings for Opensearch
      //These should be handled manually.
      //-----------------------------------------------------------------------------------------//
      "matchPackagePatterns": [
        "opensearch"
      ],
      "additionalBranchPrefix": [
        "{{depName}}-"
      ],
      "labels": [
        "dependencies",
        "automated-pr"
      ]
    },
    {
      //-----------------------------------------------------------------------------------------//
      //Settings for Kafka
      //These should be handled manually.
      //-----------------------------------------------------------------------------------------//
      "matchPackagePatterns": [
        "kafka"
      ],
      "additionalBranchPrefix": [
        "{{depName}}-"
      ],
      "labels": [
        "dependencies",
        "automated-pr"
      ],
      "matchUpdateTypes": [
        "minor",
        "major",
        "patch"
      ],
      "automerge": false
    },
    {
      //-----------------------------------------------------------------------------------------//
      //Various disabled deps
      //These should be handled manually.
      //-----------------------------------------------------------------------------------------//
      "matchPackagePatterns": [
        "oaas-observability"
      ],
      "additionalBranchPrefix": [
        "{{depName}}-"
      ],
      "labels": [
        "dependencies",
        "automated-pr"
      ],
      "matchUpdateTypes": [
        "minor",
        "major",
        "patch"
      ],
      "automerge": false
    },
    {
      //-----------------------------------------------------------------------------------------//
      //Settings for dependencies from Kafka, Flink and Opensearch which shouldn't have the Blocked label
      //These are dependencies we want to update even though they come from important packages
      //Specific package names can be included in the array below
      //-----------------------------------------------------------------------------------------//
      "matchPackageNames": [
        "io.confluent:kafka-avro-serializer",
        "io.strimzi:kafka-oauth-client",
        "org.opensearch.client:opensearch-rest-high-level-client",
        "org.opensearch:opensearch"
      ],
      "additionalBranchPrefix": [
        "{{depName}}-"
      ],
      "labels": [
        "dependencies",
        "automated-pr"
      ],
      "automerge": false
    },
    {
      //-----------------------------------------------------------------------------------------//
      //Settings for Cheetah deps. This matches any packages with "Cheetah" in it
      //-----------------------------------------------------------------------------------------//
      //Match every dependency
      "matchPackagePatterns": [
        "Cheetah",
        "cheetah"
      ],
      "additionalBranchPrefix": [
        "{{depName}}-"
      ]
    },
    {
      //-----------------------------------------------------------------------------------------//
      //Settings for NPM. This disables npm related updates for all repositories.
      //-----------------------------------------------------------------------------------------//
      "matchDatasources": [
        "npm"
      ],
      "enabled": false
    },
    {
      //-----------------------------------------------------------------------------------------//
      //Settings for kubernetes-api
      //-----------------------------------------------------------------------------------------//
      "matchDatasources": [
        "kubernetes-api"
      ],
      "matchPackagePatterns": [
        "*"
      ],
      "automerge": false
    },
    {
      //-----------------------------------------------------------------------------------------//
      //Settings for javadoc
      //-----------------------------------------------------------------------------------------//
      "matchPackageNames": [
        "org.apache.maven.plugins:maven-javadoc-plugin"
      ],
      "dependencyDashboardApproval": true,
      "additionalBranchPrefix": [
        "{{depName}}-"
      ]
    },
    {
      //-----------------------------------------------------------------------------------------//
      //Settings for checkstyle
      //-----------------------------------------------------------------------------------------//
      "matchPackageNames": [
        "com.puppycrawl.tools:checkstyle"
      ],
      "prBodyNotes": "Note: match version with docs/flinkDev/ide_setup.md",
      "dependencyDashboardApproval": true,
      "additionalBranchPrefix": [
        "{{depName}}-"
      ]
    },
    {
      //-----------------------------------------------------------------------------------------//
      //Settings for github-tags
      //Automerges all types of updates for github-tags e.g major/minor/patch/digest
      //-----------------------------------------------------------------------------------------//
      "matchDatasources": [
        "github-tags"
      ],
      "matchPackagePatterns": [
        "*"
      ],
      "automerge": true,
      "additionalBranchPrefix": [
        "{{depName}}-"
      ]
    },
    //-----------------------------------------------------------------------------------------//
    //Settings which dont fit within a specific grouping. Most have  been taken from previous renovate files. It's possible that some of these could be excluded.
    //-----------------------------------------------------------------------------------------//
    {
      "matchSourceUrls": [
        "https://github.com/yarnpkg/berry"
      ],
      "enabled": false
    },
    {
      "matchDatasources": [
        "helm"
      ],
      "excludeDepNames": [
        "weave-gitops"
      ]
    },
    {
      "matchPackageNames": [
        "quay.io/kubecost1/kubecost-cost-model"
      ],
      "customChangelogUrl": "https://github.com/opencost/opencost/"
    },
    {
      "matchDatasources": [
        "nuget"
      ],
      "registryUrls": [
        "https://api.nuget.org/v3/index.json",
        "https://nuget.pkg.github.com/trifork/index.json"
      ]
    },
    {
      //-----------------------------------------------------------------------------------------//
      //Settings for cheetah packages
      //-----------------------------------------------------------------------------------------//
      "matchPackageNames": [
        "Cheetah.ComponentTest",
        "com.trifork.cheetah.processing:cheetah-lib-processing",
        "cheetah-backend-api",
        "Cheetah.WebApi.Shared"
      ],
      "automerge": false
    },
    {
      //-----------------------------------------------------------------------------------------//
      //Settings for flux packages
      //-----------------------------------------------------------------------------------------//
      "matchPackagePatterns": [
        "toolkit.fluxcd.io",
        "fluxcd"
      ],
      "automerge": false,
      "matchUpdateTypes": [
        "major",
        "minor"
      ]
    },
    {
      //-----------------------------------------------------------------------------------------//
      //Disable dotnet sdk patches
      //-----------------------------------------------------------------------------------------//
      "matchPackageNames": [
        "dotnet-sdk"
      ],
      "matchUpdateTypes": [
        "patch"
      ],
      "enabled": false
    },
    {
      //-----------------------------------------------------------------------------------------//
      //Custom versioning for quay.io/strimzi/kafka:x-kafka-x 
      //-----------------------------------------------------------------------------------------//
      "matchDatasources": ["docker"],
      "matchPackageNames": ["quay.io/strimzi/kafka"],
      "versioning": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-kafka-(?<kafkaVersion>\\d+\\.\\d+\\.\\d+)$"
    },
    {
      //-----------------------------------------------------------------------------------------//
      // Custom versioning for apicurio/apicurio-registry-kafkasql:x.x.x(.Final)
      //-----------------------------------------------------------------------------------------//
      "matchPackageNames": ["apicurio/apicurio-registry-kafkasql"],
      "versioning": "regex:^.*?:(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)(?:\\.\w+)?$"
    },
    {
      //-----------------------------------------------------------------------------------------//
      //Allow go updates 
      //-----------------------------------------------------------------------------------------//
      "matchDatasources": ["golang-version"],
      "rangeStrategy": "bump"
    },
    {
      // Ignore dotnet version 9
      "matchPackagePatterns": ["dotnet"],
      "allowedVersions": "<9.0 || >9.0"
    }
  ]
}
