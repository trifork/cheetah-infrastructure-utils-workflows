name: "Build and push std image to ghcr.io"
description: "Build and push std image to ghcr.io"
inputs:
  # restore
  read_package_pat:
    description: "PAT for reading packages"
    required: true
  # build
  context:
    description: "Path to context"
    required: true
  dockerfile_path:
    description: ""
    default: dockerfiles/Dockerfile.generic
  environment:
    required: false
    description: "Which environment to build for"
    default: Production
  architecture:
    required: false
    description: "Which architectures to build for"
    default: "linux/amd64,linux/arm64"
  # push
  image_name:
    description: "Name of the image to build"
    required: true
  image_tag:
    description: "if set, will be used as tag instead of the default autogenerated tags"
    required: false
    default: ""
  github_run_id:
    description: ""
    required: false
    default: latest
  # upload
  gitlab_token:
    description: ""
    required: false
    default: ""
  push_image:
    description: Should we push the image
    required: false
    default: "true"
  upload_image:
    description: Should we upload the image as an artifact
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    - name: Get app version
      shell: bash
      id: vars
      run: echo ::set-output name=app_version::${GITHUB_REF#refs/*/v}

    - name: Build image
      uses: trifork/cheetah-infrastructure-utils/.github/actions/build-image/base@main
      with:
        read_package_pat: ${{ inputs.read_package_pat }} # we need this, as GITHUB_TOKEN only have permission to its own repo
        gitlab_token: ${{ inputs.gitlab_token }}
        github_run_id: ${{ inputs.github_run_id }}
        environment: ${{ inputs.environment }}
        architecture: ${{ inputs.architecture }}
        image_name: ${{ inputs.image_name }}
        context: ${{ inputs.context }}
        dockerfile_path: ${{ inputs.dockerfile_path }}
        image_tag: ${{ inputs.image_tag }}
        upload_image: ${{ inputs.upload_image }}
        push_image: ${{ inputs.push_image }}
        build-args: |
          ENVIRONMENT=${{ inputs.environment }}
          APP_VERSION=${{ steps.vars.outputs.app_version }}
