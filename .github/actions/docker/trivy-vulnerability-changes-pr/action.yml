name: Trivy image vulnerability changes PR
description: Gets the changes in vulnerabilities from a Trivy container scan between the base branch and the target branch

inputs:
  image-name:
    description: The name of the image to scan. This is only used for the title of the vulnerability changes comment on the pull request and is mainly here in case you have multiple images to scan. You can leave this empty if you only have one image in your repository
    required: false
  working-directory:
    description: The directory to run the workflow inside
    required: false
    default: .
  dockerfile-path:
    description: The path to the Dockerfile file. This is only used for Fat Pack
    required: false
  secrets:
    description: A list of secrets to expose to the build (e.g., key=string, GIT_AUTH_TOKEN=mytoken)
    required: false

runs:
  using: composite
  steps:
    - name: Check pull request
      if: ${{ github.event_name != 'pull_request' }}
      shell: bash
      run: |
        echo "::error::Event is not a pull request. Exiting"
        exit 1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3

    - name: Checkout main branch
      shell: bash
      run: git checkout ${{ github.base_ref }}

    - name: Build and save base Docker image
      uses: docker/build-push-action@15560696de535e4014efeff63c48f16952e52dd1 # v6
      with:
        context: ${{ inputs.working-directory }}
        file: ${{ inputs.dockerfile-path }}
        platforms: linux/amd64
        tags: ghcr.io/trifork/cheetah-test-image:latest
        outputs: type=docker,dest=./base-image.tar
        secrets: ${{ inputs.secrets }}

    - name: Checkout current branch
      shell: bash
      run: git checkout ${{ github.head_ref }}

    - name: Build and save new Docker image
      uses: docker/build-push-action@15560696de535e4014efeff63c48f16952e52dd1 # v6
      with:
        context: ${{ inputs.working-directory }}
        file: ${{ inputs.dockerfile-path }}
        platforms: linux/amd64
        tags: ghcr.io/trifork/cheetah-test-image:latest
        outputs: type=docker,dest=./new-image.tar
        secrets: ${{ inputs.secrets }}

    - name: Scan base image
      uses: aquasecurity/trivy-action@0.33.1
      with:
        input: "./base-image.tar"
        format: "json"
        output: "./base-image-scan.json"
      env:
        TRIVY_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-db,public.ecr.aws/aquasecurity/trivy-db

    - name: Scan new image
      uses: aquasecurity/trivy-action@0.33.1
      with:
        input: "./new-image.tar"
        format: "json"
        output: "./new-image-scan.json"
      env:
        TRIVY_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-db,public.ecr.aws/aquasecurity/trivy-db

    - name: Get vulnerability changes
      id: get-vulnerability-changes
      shell: bash
      run: |
        jq -c '[.Results[].Vulnerabilities[]? | {VulnerabilityID, PkgName, Severity}]' "./base-image-scan.json" > ./base-image-vulnerabilities.json
        jq -c '[.Results[].Vulnerabilities[]? | {VulnerabilityID, PkgName, Severity}]' "./new-image-scan.json" > ./new-image-vulnerabilities.json

        jq -s '.[0] - .[1]' ./new-image-vulnerabilities.json ./base-image-vulnerabilities.json > ./added-vulnerabilities.json
        jq -s '.[0] - .[1]' ./base-image-vulnerabilities.json ./new-image-vulnerabilities.json > ./removed-vulnerabilities.json

        if [ -n "${{ inputs.image-name }}" ]; then
          printf "# ${{ inputs.image-name }}\n\n" >> ./vulnerability-changes.md
        fi

        printf "## New vulnerabilities\n\n" >> ./vulnerability-changes.md
        printf "\n|  Vulnerability  | Package | Severity |\n |---    |:-:    |:-:  |\n" >> ./vulnerability-changes.md
        if [ $(jq length ./added-vulnerabilities.json) -ne 0 ]; then
          jq -r '.[] | [.VulnerabilityID, .PkgName, .Severity] | join(" | ")' "./added-vulnerabilities.json" | sed -E  "s/([^ ]*)(.*)/[\1](https:\/\/nvd.nist.gov\/vuln\/detail\/\1)\2/" | sed 's/$/ |a /'  >> ./vulnerability-changes.md
        fi

        printf "\n ## Removed vulnerabilities\n\n" >> ./vulnerability-changes.md
        printf "\n|   Vulnerability  |   Package | Severity |\n |---    |:-:    |:-: |\n" >> ./vulnerability-changes.md
        if [ $(jq length ./removed-vulnerabilities.json) -ne 0 ]; then
          jq -r '.[] | [.VulnerabilityID, .PkgName, .Severity] | join(" | ")' "./removed-vulnerabilities.json" | sed -E  "s/([^ ]*)(.*)/[\1](https:\/\/nvd.nist.gov\/vuln\/detail\/\1)\2/" | sed 's/$/ |a /'  >> ./vulnerability-changes.md
        fi

    - name: Comment PR
      uses: thollander/actions-comment-pull-request@v3
      with:
        file-path: ./vulnerability-changes.md
        comment-tag: ${{ inputs.image-name || 'trivy-vulnerability-changes-pr' }}
